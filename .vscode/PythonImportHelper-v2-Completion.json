[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "exemple.urls",
        "description": "exemple.urls",
        "isExtraImport": true,
        "detail": "exemple.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "UserAPITestCase",
        "importPath": "exemple.tests",
        "description": "exemple.tests",
        "isExtraImport": true,
        "detail": "exemple.tests",
        "documentation": {}
    },
    {
        "label": "unittest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unittest",
        "description": "unittest",
        "detail": "unittest",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pylint_demo.exemple.migrations.0001_initial",
        "description": "pylint_demo.exemple.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('username', models.CharField(max_length=150, unique=True)),",
        "detail": "pylint_demo.exemple.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pylint_demo.exemple.migrations.0002_alter_user_email_alter_user_first_name_and_more",
        "description": "pylint_demo.exemple.migrations.0002_alter_user_email_alter_user_first_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('exemple', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='email',\n            field=models.EmailField(max_length=254),\n        ),",
        "detail": "pylint_demo.exemple.migrations.0002_alter_user_email_alter_user_first_name_and_more",
        "documentation": {}
    },
    {
        "label": "ExempleConfig",
        "kind": 6,
        "importPath": "pylint_demo.exemple.apps",
        "description": "pylint_demo.exemple.apps",
        "peekOfCode": "class ExempleConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'exemple'",
        "detail": "pylint_demo.exemple.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "pylint_demo.exemple.models",
        "description": "pylint_demo.exemple.models",
        "peekOfCode": "class User(models.Model):\n    username = models.CharField(max_length=150,null=False)\n    email = models.EmailField(null=False)\n    first_name = models.CharField(max_length=30, null=False)\n    last_name = models.CharField(max_length=30, null=False)\n    def __str__(self):\n        return self.username",
        "detail": "pylint_demo.exemple.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "pylint_demo.exemple.serializers",
        "description": "pylint_demo.exemple.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = '__all__'",
        "detail": "pylint_demo.exemple.serializers",
        "documentation": {}
    },
    {
        "label": "UserAPITestCase",
        "kind": 6,
        "importPath": "pylint_demo.exemple.tests",
        "description": "pylint_demo.exemple.tests",
        "peekOfCode": "class UserAPITestCase(APITestCase):\n    def setUp(self):\n        self.utilisateur1 = User.objects.create(username='Alice', first_name='Alicia',last_name='Jean', email='alice@example.com')\n        self.url = '/api/utilisateur/'  # Assurez-vous que cette URL est correcte\n    def test_list_utilisateurs(self):\n        response = self.client.get(self.url)\n        utilisateurs = User.objects.all()\n        serializer = UserSerializer(utilisateurs, many=True)\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n        self.assertEqual(response.data, serializer.data)",
        "detail": "pylint_demo.exemple.tests",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "pylint_demo.exemple.urls",
        "description": "pylint_demo.exemple.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register(r'api/utilisateur', UserListCreateView)\nurlpatterns = [\n    path('', include(router.urls)),  # Inclure les URLs du routeur\n]",
        "detail": "pylint_demo.exemple.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pylint_demo.exemple.urls",
        "description": "pylint_demo.exemple.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),  # Inclure les URLs du routeur\n]",
        "detail": "pylint_demo.exemple.urls",
        "documentation": {}
    },
    {
        "label": "UserListCreateView",
        "kind": 6,
        "importPath": "pylint_demo.exemple.views",
        "description": "pylint_demo.exemple.views",
        "peekOfCode": "class UserListCreateView(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer",
        "detail": "pylint_demo.exemple.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.asgi",
        "description": "pylint_demo.pylint_demo.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "pylint_demo.pylint_demo.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-kt5x9@fm9$pck_-qz+u(raft^+3v59nkuts0q-_*_x=1_bd!k^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# settings.py\nimport os",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-kt5x9@fm9$pck_-qz+u(raft^+3v59nkuts0q-_*_x=1_bd!k^'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# settings.py\nimport os\nHTTP_PROXY = os.getenv(\"HTTP_PROXY\", \"http://127.0.0.1:8080\")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# settings.py\nimport os\nHTTP_PROXY = os.getenv(\"HTTP_PROXY\", \"http://127.0.0.1:8080\")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# settings.py\nimport os\nHTTP_PROXY = os.getenv(\"HTTP_PROXY\", \"http://127.0.0.1:8080\")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "HTTP_PROXY",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "HTTP_PROXY = os.getenv(\"HTTP_PROXY\", \"http://127.0.0.1:8080\")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles', \n    'exemple',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles', \n    'exemple',\n    'rest_framework',\n]",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'pylint_demo.urls'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "ROOT_URLCONF = 'pylint_demo.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "WSGI_APPLICATION = 'pylint_demo.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.settings",
        "description": "pylint_demo.pylint_demo.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "pylint_demo.pylint_demo.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.urls",
        "description": "pylint_demo.pylint_demo.urls",
        "peekOfCode": "urlpatterns = [\n    # path('admin/', admin.site.urls),\n     path('', include(router.urls)),\n]",
        "detail": "pylint_demo.pylint_demo.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "pylint_demo.pylint_demo.wsgi",
        "description": "pylint_demo.pylint_demo.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "pylint_demo.pylint_demo.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "pylint_demo.manage",
        "description": "pylint_demo.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pylint_demo.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "pylint_demo.manage",
        "documentation": {}
    },
    {
        "label": "CombinedTests",
        "kind": 6,
        "importPath": "pylint_demo.tests",
        "description": "pylint_demo.tests",
        "peekOfCode": "class CombinedTests(TestCase):\n    def test_user_app_tests(self):\n        # Créez une suite de tests et ajoutez-y les tests de UtilisateurAPIViewTests\n        suite = unittest.TestSuite()\n        suite.addTest(unittest.makeSuite(UserAPITestCase))\n        # Exécutez la suite de tests\n        result = unittest.TextTestRunner().run(suite)\n        # Vérifiez si tous les tests ont réussi\n        self.assertTrue(result.wasSuccessful(), \"Les tests  ont échoué.\")",
        "detail": "pylint_demo.tests",
        "documentation": {}
    }
]