name: Django-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit pylint pytest-html  # Only necessary dependencies for the job

      - name: Run Tests with Django
        run: |
          python pylint_demo/manage.py test --verbosity=2
        env:
          DJANGO_SETTINGS_MODULE: pylint_demo.settings  # Ensure settings are specified

      - name: Run SAST (Bandit)
        run: |
          bandit -r pylint_demo/ -f html -o bandit_report.html

      - name: Start Django Server
        run: |
          python pylint_demo/manage.py runserver 0.0.0.0:8000 &
        env:
          DJANGO_SETTINGS_MODULE: pylint_demo.settings

      - name: Wait for Server to Start
        run: |
          for i in {1..30}; do 
            if curl -s http://localhost:8000 > /dev/null; then 
              echo "Django server is up and running.";
              break; 
            fi; 
            echo "Waiting for server to start..."; 
            sleep 1; 
          done

      - name: Run DAST (ZAP Scan)
        run: |
          docker run --rm -t -v $(pwd):/zap/wrk/:rw -u zap zaproxy/zap2docker-stable zap-baseline.py \
          -t http://loisirpourtous.ca -r zap_report.html

      - name: Upload Reports
        uses: actions/upload-artifact@v3
        with:
          name: Reports
          path: |
            bandit_report.html
            zap_report.html
