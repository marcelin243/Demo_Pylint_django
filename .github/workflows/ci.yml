name: Django-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit pylint-django  # Installation de Bandit et pylint-django
  
      # - name: Run Pylint
      #   run: |
      #       set +e
      #       pylint pylint_demo/ --load-plugins=pylint_django
      #       exit_code=$?
      #       echo "Pylint exited with code $exit_code"
      #       if [ $exit_code -ne 0 ]; then
      #         echo "Pylint found issues. Please review the report."
      #         # Créer un issue si Pylint trouve des problèmes
      #         gh api \
      #           --method POST \
      #           -H "Accept: application/vnd.github+json" \
      #           -H "X-GitHub-Api-Version: 2022-11-28" \
      #           /repos/OWNER/REPO/issues \
      #           -f "title=Problème détecté par Pylint" \
      #           -f "body=Pylint a trouvé des problèmes dans le code. Veuillez les examiner." \
      #           -f "labels[]=bug"
      #       fi

      - name: Run SAST (Bandit)
        run: |
          set -e  # Arrête le script si une commande échoue
          bandit -r pylint_demo/ -f screen  # Exécution de Bandit et affichage des résultats dans les logs

      - name: ZAP Scan
        id: zap_scan
        uses: zaproxy/action-baseline@v0.13.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Assurez-vous que ce token a les bonnes permissions
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://apps.mediabox.bi:943/'
          rules_file_name: '.zap/rules.tsv'  # Assurez-vous que ce fichier de règles existe
          cmd_options: '-a'  # Génération d'un rapport HTML

      - name: Create Issue for Alerts
        if: ${{ contains(steps.zap_scan.outputs.result, 'alert') }}
        run: |
              gh api \
                --method POST \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                /repos/OWNER/REPO/issues \
                -f "title=Alerte détectée dans le rapport" \
                -f "body=Des alertes ont été détectées dans le rapport d'analyse. Veuillez les examiner." \
                -f "labels[]=alert" \
                -H "Authorization: token ${{ secrets.MY_PAT }}"

      - name: Upload Reports
        if: success()  
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            test_report.html  # Rapport des tests
            bandit_report.html  # Rapport Bandit
            zap_report.html  # Rapport ZAP